name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
            gradle-version: 8.13
            arguments: --warning-mode all --stacktrace

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build with Gradle and generate reports
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build test jacocoTestReport
          build-root-directory: app

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd app && ./gradlew sonar \
            -Dsonar.projectKey=alexey4050_java-project-72 \
            -Dsonar.organization=alexey4050 \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml \
            -Dsonar.java.binaries=build/classes \
            --info

      - name: Publish code coverage to CodeClimate
        uses: paambaati/codeclimate-action@v5.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODECLIMATE_API_KEY }}
        with:
          coverageCommand: ./gradlew jacocoTestReport
          coverageLocations: ${{ github.workspace }}/app/build/reports/jacoco/test/jacocoTestReport.xml
          debug: true

      - name: Prepare coverage report for Qlty.sh
        run: |
          mkdir -p reports
          cp app/build/reports/jacoco/test/jacocoTestReport.xml reports/coverage.xml

      - name: Upload coverage to Qlty.sh
        uses: qltysh/qlty-action/coverage@v1
        with:
          token: ${{ secrets.QLTY_COVERAGE_TOKEN }}
          files: reports/coverage.xml